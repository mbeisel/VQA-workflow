<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:quantme="https://github.com/UST-QuAntiL/QuantME-Quantum4BPMN" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="Definitions_1a0cx7a" targetNamespace="http://bpmn.io/schema/bpmn" exporter="QuantME Modeler" exporterVersion="4.5.0-nightly.20220630">
  <bpmn:process id="sequoia_tsp_workflow" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="adjMatrix" label="Array containing adj_matrix" type="string" defaultValue="[[3,2,1],[2,1,3],[1,1,1]]" />
          <camunda:formField id="credentials" label="QPU Credentials" type="string" />
          <camunda:formField id="qpu" label="IBMQ Backend name" type="string" defaultValue="ibmq_lima" />
          <camunda:formField id="optimizer" label="optimizer" type="string" defaultValue="cobyla" />
          <camunda:formField id="objFun" label="Objective Function for evaluation" type="string" defaultValue="expectation" />
          <camunda:formField id="gammas" label="gammas" type="string" defaultValue="[0]" />
          <camunda:formField id="betas" label="betas" type="string" defaultValue="[0]" />
          <camunda:formField id="p" label="p" type="string" defaultValue="1" />
          <camunda:formField id="shots" label="shots" type="string" defaultValue="1000" />
        </camunda:formData>
      </bpmn:extensionElements>
      <bpmn:outgoing>SequenceFlow_0sr2iwc</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="SequenceFlow_0sr2iwc" sourceRef="StartEvent_1" targetRef="Task_1cl77j3" />
    <quantme:quantumCircuitLoadingTask id="Task_0dw496o" name="Circuit Generation" url="quokka">
      <bpmn:incoming>SequenceFlow_1lkp4iq</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1vbot8e</bpmn:outgoing>
    </quantme:quantumCircuitLoadingTask>
    <quantme:quantumCircuitExecutionTask id="Task_1qyuei8" name="Circuit Execution" provider="ibm" qpu="simulator" shots="1111" programmingLanguage="openqasm">
      <bpmn:incoming>SequenceFlow_1vbot8e</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_19r6ece</bpmn:outgoing>
    </quantme:quantumCircuitExecutionTask>
    <bpmn:exclusiveGateway id="ExclusiveGateway_1axmwfm" name="converged?" camunda:asyncBefore="true">
      <bpmn:incoming>SequenceFlow_1w0ot2x</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0l5he8w</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_09rk0yy</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_0l5he8w" name="Yes" sourceRef="ExclusiveGateway_1axmwfm" targetRef="EndEvent_0g8k4yh">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${converged == 'true'}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_09rk0yy" name="No" sourceRef="ExclusiveGateway_1axmwfm" targetRef="Task_0iim6gd">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${converged == 'false'}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="SequenceFlow_19r6ece" sourceRef="Task_1qyuei8" targetRef="ExclusiveGateway_0tcozbv" />
    <quantme:readoutErrorMitigationTask id="Task_0k5vfu2" name="Readout Error Mitigation" provider="ibm" qpu="test" shots="1000" calibrationMethod="fullMatrix" mitigationMethod="matrixInversion">
      <bpmn:incoming>SequenceFlow_1fv1q7j</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1yekqw0</bpmn:outgoing>
    </quantme:readoutErrorMitigationTask>
    <bpmn:sequenceFlow id="SequenceFlow_1yekqw0" sourceRef="Task_0k5vfu2" targetRef="ExclusiveGateway_0h6empr" />
    <bpmn:serviceTask id="Task_0iim6gd" name="Optimize" camunda:asyncBefore="true" camunda:type="external" camunda:topic="123">
      <bpmn:incoming>SequenceFlow_09rk0yy</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0bkpwmi</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_0bkpwmi" sourceRef="Task_0iim6gd" targetRef="ExclusiveGateway_13c00i2" />
    <bpmn:endEvent id="EndEvent_0g8k4yh">
      <bpmn:incoming>SequenceFlow_0l5he8w</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:serviceTask id="Task_1cl77j3" name="Initialize Optimizer">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="url">http://optimization-service:5000/optimization-service</camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">var optimizer = execution.getVariable("optimizer");
								var gammas = execution.getVariable("gammas");
                var betas = execution.getVariable("betas");
                
                gammas = gammas.substring(1, gammas.length-1)
                gammas = gammas.split(",")
                print(gammas[0]);
                array = [];
                for each (var el in gammas) array.push(parseFloat(el));
                gammas = array
                
                betas = betas.substring(1, betas.length-1)
                betas = betas.split(",")
                print(betas[0]);
                array_b = [];
                for each (var el in betas) array.push(parseFloat(el));
                betas = array_b
                
                initialParameters = gammas.concat(betas)

                var myJson = {"topic": "123",
"optimizer": optimizer,"initialParameters": initialParameters};

myJson = JSON.stringify(myJson);
//execution.setVariable("myJson",myJson);
myJson =myJson;</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="optimizerInit">
              <camunda:script scriptFormat="JavaScript">//${S(response)}

var resp = connector.getVariable("response")
print('resp'+ resp);
resp;</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0sr2iwc</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_06bz4cs</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_06bz4cs" sourceRef="Task_1cl77j3" targetRef="ExclusiveGateway_13c00i2" />
    <bpmn:sequenceFlow id="SequenceFlow_1w0ot2x" sourceRef="Task_1442y9q" targetRef="ExclusiveGateway_1axmwfm" />
    <bpmn:serviceTask id="Task_1442y9q" name="Evaluate Results">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="url">http://objective-function-service:5000/objective/tsp</camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">var adjMatrix = execution.getVariable("adjMatrix");
var counts = execution.getVariable("counts");
                var objFun = execution.getVariable("objFun");

                var myJson = {"adj_matrix": adjMatrix,"counts": counts,"objFun": objFun};

myJson = JSON.stringify(myJson);
//execution.setVariable("myJson",myJson);
myJson =myJson;</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="objValue">
              <camunda:script scriptFormat="JavaScript">//${S(response)}

var resp = connector.getVariable("response")
print('resp'+ resp);
var result = S(resp);
print('result ' + result );
result;</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0w0u62m</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1w0ot2x</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="ExclusiveGateway_13c00i2">
      <bpmn:incoming>SequenceFlow_0bkpwmi</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_06bz4cs</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1lkp4iq</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_1lkp4iq" sourceRef="ExclusiveGateway_13c00i2" targetRef="Task_0dw496o" />
    <bpmn:sequenceFlow id="SequenceFlow_1vbot8e" sourceRef="Task_0dw496o" targetRef="Task_1qyuei8" />
    <bpmn:exclusiveGateway id="ExclusiveGateway_0tcozbv" name="simulator?" camunda:asyncBefore="true">
      <bpmn:incoming>SequenceFlow_19r6ece</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1fv1q7j</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_1o0kgho</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_1fv1q7j" name="No" sourceRef="ExclusiveGateway_0tcozbv" targetRef="Task_0k5vfu2">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${qpu!= 'simulator'}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:exclusiveGateway id="ExclusiveGateway_0h6empr">
      <bpmn:incoming>SequenceFlow_1yekqw0</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_1o0kgho</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0w0u62m</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_0w0u62m" sourceRef="ExclusiveGateway_0h6empr" targetRef="Task_1442y9q" />
    <bpmn:sequenceFlow id="SequenceFlow_1o0kgho" name="Yes" sourceRef="ExclusiveGateway_0tcozbv" targetRef="ExclusiveGateway_0h6empr">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${qpu== 'simulator'}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="sequoia_tsp_workflow">
      <bpmndi:BPMNEdge id="SequenceFlow_1vbot8e_di" bpmnElement="SequenceFlow_1vbot8e">
        <di:waypoint x="640" y="250" />
        <di:waypoint x="690" y="250" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1lkp4iq_di" bpmnElement="SequenceFlow_1lkp4iq">
        <di:waypoint x="505" y="250" />
        <di:waypoint x="540" y="250" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1w0ot2x_di" bpmnElement="SequenceFlow_1w0ot2x">
        <di:waypoint x="1200" y="250" />
        <di:waypoint x="1255" y="250" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_06bz4cs_di" bpmnElement="SequenceFlow_06bz4cs">
        <di:waypoint x="360" y="250" />
        <di:waypoint x="455" y="250" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0bkpwmi_di" bpmnElement="SequenceFlow_0bkpwmi">
        <di:waypoint x="940" y="390" />
        <di:waypoint x="480" y="390" />
        <di:waypoint x="480" y="275" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1yekqw0_di" bpmnElement="SequenceFlow_1yekqw0">
        <di:waypoint x="1000" y="120" />
        <di:waypoint x="1050" y="120" />
        <di:waypoint x="1050" y="225" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_19r6ece_di" bpmnElement="SequenceFlow_19r6ece">
        <di:waypoint x="790" y="250" />
        <di:waypoint x="820" y="250" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_09rk0yy_di" bpmnElement="SequenceFlow_09rk0yy">
        <di:waypoint x="1280" y="275" />
        <di:waypoint x="1280" y="390" />
        <di:waypoint x="1040" y="390" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1288" y="330" width="15" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0l5he8w_di" bpmnElement="SequenceFlow_0l5he8w">
        <di:waypoint x="1305" y="250" />
        <di:waypoint x="1472" y="250" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1380" y="232" width="18" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0sr2iwc_di" bpmnElement="SequenceFlow_0sr2iwc">
        <di:waypoint x="188" y="250" />
        <di:waypoint x="260" y="250" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1fv1q7j_di" bpmnElement="SequenceFlow_1fv1q7j">
        <di:waypoint x="845" y="225" />
        <di:waypoint x="845" y="120" />
        <di:waypoint x="900" y="120" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="854" y="170" width="15" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0w0u62m_di" bpmnElement="SequenceFlow_0w0u62m">
        <di:waypoint x="1075" y="250" />
        <di:waypoint x="1100" y="250" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1o0kgho_di" bpmnElement="SequenceFlow_1o0kgho">
        <di:waypoint x="870" y="250" />
        <di:waypoint x="1025" y="250" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="939" y="232" width="18" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="152" y="232" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="QuantumCircuitLoadingTask_0m4b433_di" bpmnElement="Task_0dw496o">
        <dc:Bounds x="540" y="210" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_1axmwfm_di" bpmnElement="ExclusiveGateway_1axmwfm" isMarkerVisible="true">
        <dc:Bounds x="1255" y="225" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1252" y="195" width="58" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_14bmf2p_di" bpmnElement="Task_0iim6gd">
        <dc:Bounds x="940" y="350" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="EndEvent_0g8k4yh_di" bpmnElement="EndEvent_0g8k4yh">
        <dc:Bounds x="1472" y="232" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0jruw2w_di" bpmnElement="Task_1cl77j3">
        <dc:Bounds x="260" y="210" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0d5rjdi_di" bpmnElement="Task_1442y9q">
        <dc:Bounds x="1100" y="210" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_13c00i2_di" bpmnElement="ExclusiveGateway_13c00i2" isMarkerVisible="true">
        <dc:Bounds x="455" y="225" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="QuantumCircuitExecutionTask_09u5mfs_di" bpmnElement="Task_1qyuei8">
        <dc:Bounds x="690" y="210" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ReadoutErrorMitigationTask_1rcxeya_di" bpmnElement="Task_0k5vfu2">
        <dc:Bounds x="900" y="80" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_0tcozbv_di" bpmnElement="ExclusiveGateway_0tcozbv" isMarkerVisible="true">
        <dc:Bounds x="820" y="225" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="820" y="282" width="51" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_0h6empr_di" bpmnElement="ExclusiveGateway_0h6empr" isMarkerVisible="true">
        <dc:Bounds x="1025" y="225" width="50" height="50" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
