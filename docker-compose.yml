version: '3'

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:latest #RELEASE.2022-01-27T03-53-02Z
  command: server --console-address ":9001"  http://minio{1...2}/data{1...2} 
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minio
    MINIO_ROOT_PASSWORD: minio123
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3
  networks:
    - modulo-demo

services:
  ### Camunda Engine ###
  camunda-engine:
    build: camunda
    ports:
      - 8080:8080
    networks:
      - modulo-demo

  ### Error-Mitigation Service ###
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2
  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2
  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
    networks:
      - modulo-demo
  error-mitigation-service:
    image: planqk/error-mitigation-service:v0.0.1
    command: app.py
    ports:
      - "5071:5000"
    environment:
      - MINIO_URL=nginx:9000
    depends_on:
      - nginx
    networks:
      - modulo-demo
      
  execution-service:
    build: ./services/execution-service
    ports:
      - '8086:5000'
    networks:
      - modulo-demo
      
  optimization-service:
    build: ./services/optimization-service
    ports:
      - '8087:5000'
    networks:
      - modulo-demo
    env_file:
     - ip.env
      
  objective-function-service:
    build: ./services/objective-function-service
    ports:
      - '8088:5000'
    networks:
      - modulo-demo   
      
  circuit-generation-service:
    build: ./services/circuit-generation-service
    ports:
      - '8089:5000'
    networks:
      - modulo-demo   

networks:
  modulo-demo:
    driver: bridge

